node('nonsgx_slave') {
    stage('checkout'){
        dir('./') {
            git url: 'https://github.com/jinengandhi-intel/graphene_local_ci.git'
        }
        
        dir('graphene') {
            git url: 'https://github.com/oscarlab/graphene.git'
        }
    }

    dir('graphene') {
        try {
            sh 'cp -rf $WORKSPACE/ltp_src LibOS/shim/test/ltp/'
            sh 'cp -rf $WORKSPACE/ltp_config/* LibOS/shim/test/ltp/'

            env.WORKSPACE = env.WORKSPACE + "/graphene"

            sh 'sed -i -e \'s/dent != g_dentry_root && dent->state & DENTRY_VALID/0/\' \
            $WORKSPACE/LibOS/shim/src/fs/shim_fs.c'
            sh 'sed -i \'s/.release  = "3.10.0"/.release  = "5.10.0"/\' \
            $WORKSPACE/LibOS/shim/src/sys/shim_uname.c'

            load '../ci/config-docker.jenkinsfile'

            docker.build(
                "local:${env.BUILD_TAG}",
                '-f ../ci/ubuntu18.04.dockerfile .'
            ).inside("${env.DOCKER_ARGS_COMMON}") {
                load '.ci/lib/config.jenkinsfile'
                load '.ci/lib/config-ubuntu18.04.jenkinsfile'
                load '.ci/lib/config-release.jenkinsfile'

                load '.ci/lib/stage-build-nosgx.jenkinsfile'
                load '../ci/stage-test-direct.jenkinsfile'
            }
        } finally {
            stage('cleanup'){
                sh 'rm -rf $WORKSPACE/LibOS/shim/test/ltp/ltp*.xml'
            }
        }
    }
}
